import ErrorPage from "@/common/layouts/ErrorPage";
import { APP_CONFIG } from "@/config/app.config";
import { API_CODE, API_METHOD_ENUM } from "@/enums/api.enum";
import { APP_AUTH } from "@/enums/app.enum";
import { catchError, responseError } from "@/services/base.service";
import { ResponseUserType } from "@/types/user.type";
import { Metadata } from "next";
import { cookies } from "next/headers";
import React, { use } from "react";
import '../../css/pages/profile.css';
import ProfileUserView from "@/views/profile/user/ProfileUserView";
import WrapApp from "@/common/layouts/WrapApp";

interface ProfileUserPageProps {
  params: {
    id: number
  }
}

export const metadata: Metadata = {
  title: "Next Ticket | Workspace",
  description: "Generated by Pham Van Chien - phamvanchien3605@gmail.com - Workspace",
};

const ProfileUserPage: React.FC<ProfileUserPageProps> = ({ params }) => {
  const user = use(fetchUser(params.id));
  if (!user || user.code !== API_CODE.OK) {
    return <ErrorPage errorCode={user.code} />
  }

  return <WrapApp>
    <ProfileUserView user={user.data} />
  </WrapApp>
}

const fetchUser = async (userId: number): Promise<ResponseUserType> => {
  try {
    const apiResponse = await fetch(APP_CONFIG.API.URL + APP_CONFIG.API.PREFIX.user.url + '/' + userId.toString(), {
      method: API_METHOD_ENUM.GET,
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${cookies().get(APP_AUTH.COOKIE_AUTH_KEY)?.value}`
      }
    });
    
    return await apiResponse.json();
  } catch (error) {
    const errorRes = responseError(500);
    errorRes.error = catchError();
    return errorRes;
  }
};

export default ProfileUserPage;