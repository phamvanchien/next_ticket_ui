import MainLayout from "@/app/main";
import ErrorPage from "@/common/layouts/ErrorPage";
import { APP_CONFIG } from "@/config/app.config";
import { API_CODE, API_METHOD_ENUM } from "@/enums/api.enum";
import { APP_AUTH } from "@/enums/app.enum";
import { catchError, responseError } from "@/services/base.service";
import { ResponseWorkspaceType } from "@/types/workspace.type";
import WorkspaceIndexView from "@/views/workspace/index/WorkspaceIndexView";
import { Metadata } from "next";
import { cookies } from "next/headers";
import React, { use } from "react";
import '../../css/pages/task.css';
import '../../css/pages/workspace.css';

interface WorkspacePageProps {
  params: {
    id: number
  }
}

export const metadata: Metadata = {
  title: "Next Ticket | Workspace",
  description: "Generated by Pham Van Chien - phamvanchien3605@gmail.com - Workspace",
};

const WorkspacePage: React.FC<WorkspacePageProps> = ({ params }) => {
  const workspace = use(fetchWorkspace(params.id));
  if (!workspace || workspace.code !== API_CODE.OK) {
    return <ErrorPage errorCode={workspace.code} />
  }

  return <MainLayout workspace={workspace.data}>
    <WorkspaceIndexView workspace={workspace.data} />
  </MainLayout>
}

const fetchWorkspace = async (workspaceId: number): Promise<ResponseWorkspaceType> => {
  try {
    const apiResponse = await fetch(APP_CONFIG.API.URL + APP_CONFIG.API.PREFIX.workspace.url + '/' + workspaceId.toString(), {
      method: API_METHOD_ENUM.GET,
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${cookies().get(APP_AUTH.COOKIE_AUTH_KEY)?.value}`
      }
    });
    
    return await apiResponse.json();
  } catch (error) {
    const errorRes = responseError(500);
    errorRes.error = catchError();
    return errorRes;
  }
};

export default WorkspacePage;